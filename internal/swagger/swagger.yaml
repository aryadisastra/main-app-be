definitions:
  dto.CreateShipmentRequest:
    properties:
      item_description:
        type: string
      receiver_address:
        type: string
      receiver_name:
        type: string
      sender_address:
        type: string
      sender_name:
        type: string
    required:
    - item_description
    - receiver_address
    - receiver_name
    - sender_address
    - sender_name
    type: object
  dto.ShipmentResponse:
    properties:
      id:
        type: string
      item_description:
        type: string
      receiver_address:
        type: string
      receiver_name:
        type: string
      sender_address:
        type: string
      sender_name:
        type: string
      status:
        type: string
      tracking_number:
        type: string
      user_id:
        type: string
    type: object
  dto.UpdateStatusRequest:
    properties:
      status:
        enum:
        - Shipped
        - InTransit
        - Delivered
        - Cancelled
        type: string
    required:
    - status
    type: object
  httpx.Envelope:
    properties:
      data: {}
      message:
        type: string
      result:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /api/v1/shipments:
    get:
      description: Mengambil semua pengiriman milik user yang sedang login.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/httpx.Envelope'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.ShipmentResponse'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpx.Envelope'
      security:
      - BearerAuth: []
      summary: Get My Shipments
      tags:
      - shipments
    post:
      consumes:
      - application/json
      description: Membuat pesanan pengiriman untuk user yang sedang login.
      parameters:
      - description: Create shipment payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.CreateShipmentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/httpx.Envelope'
            - properties:
                data:
                  $ref: '#/definitions/dto.ShipmentResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpx.Envelope'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpx.Envelope'
      security:
      - BearerAuth: []
      summary: Create Shipment
      tags:
      - shipments
  /api/v1/shipments/{trackingNumber}/status:
    patch:
      consumes:
      - application/json
      description: Mengubah status pengiriman. Hanya role `admin` yang diizinkan.
      parameters:
      - description: Tracking Number
        in: path
        name: trackingNumber
        required: true
        type: string
      - description: Update status payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/httpx.Envelope'
            - properties:
                data:
                  $ref: '#/definitions/dto.ShipmentResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpx.Envelope'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpx.Envelope'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/httpx.Envelope'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httpx.Envelope'
      security:
      - BearerAuth: []
      summary: Update Shipment Status (admin only)
      tags:
      - shipments
  /api/v1/shipments/track/{trackingNumber}:
    get:
      description: Melacak status pengiriman berdasarkan nomor resi.
      parameters:
      - description: Tracking Number
        in: path
        name: trackingNumber
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/httpx.Envelope'
            - properties:
                data:
                  $ref: '#/definitions/dto.ShipmentResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpx.Envelope'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httpx.Envelope'
      security:
      - BearerAuth: []
      summary: Track Shipment
      tags:
      - shipments
swagger: "2.0"
